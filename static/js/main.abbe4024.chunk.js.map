{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","position","setPosition","lastPosition","length","className","type","onClick","style","width","transition","map","image","transform","height","src","alt","App","state","this","htmlFor","id","defaultValue","onChange","event","setState","target","value","min","max","checked","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.abbe4024.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [position, setPosition] = useState(1);\n\n  const lastPosition = images.length - frameSize + 1;\n  const firstPosition = 1;\n\n  // setting the position of images after frameSize change\n  if (position > lastPosition) {\n    setPosition(lastPosition);\n  }\n\n  const handleNext = (): void => {\n    if (!infinite) {\n      if ((position + step) >= lastPosition) {\n        setPosition(lastPosition);\n\n        return;\n      }\n\n      setPosition(position + step);\n    } else {\n      if (position === lastPosition) {\n        setPosition(firstPosition);\n\n        return;\n      }\n\n      if ((position + step) > lastPosition) {\n        setPosition(lastPosition);\n\n        return;\n      }\n\n      setPosition(position + step);\n    }\n  };\n\n  const handlePrev = (): void => {\n    if (!infinite) {\n      if ((position - step) <= 1) {\n        setPosition(1);\n\n        return;\n      }\n\n      setPosition(position - step);\n    } else {\n      if (position === 1) {\n        setPosition(lastPosition);\n\n        return;\n      }\n\n      if ((position - step) < 1) {\n        setPosition(1);\n\n        return;\n      }\n\n      setPosition(position - step);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <button\n        type=\"button\"\n        className={\n          `Carousel__button ${firstPosition === position && !infinite\n            ? 'Carousel__button--disabled' : ''}`\n        }\n        onClick={handlePrev}\n      >\n        &lt;\n      </button>\n\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          width: `${itemWidth * frameSize}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        {images.map(\n          (image) => (\n            <li\n              className=\"Carousel__item\"\n              key={image}\n              style={{\n                transform: `translateX(${(-position + 1) * (itemWidth)}px)`,\n                transition: `transform ${animationDuration}ms ease`,\n                width: `${itemWidth}px`,\n                height: `${itemWidth}px`,\n              }}\n            >\n              <img\n                src={image}\n                alt={image}\n                style={{\n                  width: `${itemWidth}px`,\n                  height: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ),\n        )}\n      </ul>\n\n      <button\n        data-cy=\"next\"\n        type=\"button\"\n        className={\n          `Carousel__button ${lastPosition === position && !infinite\n            ? 'Carousel__button--disabled' : ''}`\n        }\n        onClick={handleNext}\n      >\n        &gt;\n      </button>\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\nexport interface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 2,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n\n        <form className=\"App__form\">\n          <label htmlFor=\"itemWidth\" className=\"App__label\">\n            Item width\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              id=\"itemWidth\"\n              defaultValue={itemWidth}\n              onChange={event => this.setState({\n                itemWidth: +event.target.value,\n              })}\n            />\n          </label>\n\n          <label htmlFor=\"frameSize\" className=\"App__label\">\n            Frame size\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              min={1}\n              max={10}\n              id=\"frameSize\"\n              defaultValue={frameSize}\n              onChange={event => this.setState({\n                frameSize: +event.target.value,\n              })}\n            />\n          </label>\n\n          <label htmlFor=\"step\" className=\"App__label\">\n            Step\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              id=\"step\"\n              defaultValue={step}\n              min={1}\n              max={10}\n              onChange={event => this.setState({\n                step: +event.target.value,\n              })}\n            />\n          </label>\n\n          <label htmlFor=\"animationDuration\" className=\"App__label\">\n            Animation duration\n            <input\n              className=\"App__input\"\n              type=\"number\"\n              id=\"animationDuration\"\n              defaultValue={animationDuration}\n              onChange={event => this.setState({\n                animationDuration: +event.target.value,\n              })}\n            />\n          </label>\n\n          <label htmlFor=\"infinite\">\n            Infinite\n            <input\n              className=\"App__input App__input--checkbox\"\n              type=\"checkbox\"\n              id=\"infinite\"\n              checked={infinite}\n              onChange={(event) => this.setState({\n                infinite: event.target.checked,\n              })}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}