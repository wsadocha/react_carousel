{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","itemWidth","frameSize","step","animationDuration","infinite","useState","position","setPosition","lastPosition","length","className","type","onClick","style","width","transition","map","image","transform","height","src","alt","App","state","setState","setValue","newState","prevState","htmlFor","id","defaultValue","onChange","event","target","value","min","max","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7c39b0f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nexport const Carousel: React.FC<Props> = ({\n  images,\n  itemWidth,\n  frameSize,\n  step,\n  animationDuration,\n  infinite,\n}) => {\n  const [position, setPosition] = useState(1);\n\n  const lastPosition = images.length - frameSize + 1;\n  const firstPosition = 1;\n\n  // setting the position of images after frameSize change\n  if (position > lastPosition) {\n    setPosition(lastPosition);\n  }\n\n  const handleNext = (): void => {\n    if (!infinite) {\n      if ((position + step) >= lastPosition) {\n        setPosition(lastPosition);\n\n        return;\n      }\n\n      setPosition(position + step);\n    } else {\n      if (position === lastPosition) {\n        setPosition(firstPosition);\n\n        return;\n      }\n\n      if ((position + step) > lastPosition) {\n        setPosition(lastPosition);\n\n        return;\n      }\n\n      setPosition(position + step);\n    }\n  };\n\n  const handlePrev = (): void => {\n    if (!infinite) {\n      if ((position - step) <= 1) {\n        setPosition(1);\n\n        return;\n      }\n\n      setPosition(position - step);\n    } else {\n      if (position === firstPosition) {\n        setPosition(lastPosition);\n\n        return;\n      }\n\n      if ((position - step) < firstPosition) {\n        setPosition(1);\n\n        return;\n      }\n\n      setPosition(position - step);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <button\n        type=\"button\"\n        className={\n          `Carousel__button ${firstPosition === position && !infinite\n            ? 'Carousel__button--disabled' : ''}`\n        }\n        onClick={handlePrev}\n      >\n        &lt;\n      </button>\n\n      <ul\n        className=\"Carousel__list\"\n        style={{\n          width: `${itemWidth * frameSize}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        {images.map(\n          (image) => (\n            <li\n              className=\"Carousel__item\"\n              key={image}\n              style={{\n                transform: `translateX(${(-position + 1) * (itemWidth)}px)`,\n                transition: `transform ${animationDuration}ms ease`,\n                width: `${itemWidth}px`,\n                height: `${itemWidth}px`,\n              }}\n            >\n              <img\n                src={image}\n                alt={image}\n                style={{\n                  width: `${itemWidth}px`,\n                  height: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ),\n        )}\n      </ul>\n\n      <button\n        data-cy=\"next\"\n        type=\"button\"\n        className={\n          `Carousel__button ${lastPosition === position && !infinite\n            ? 'Carousel__button--disabled' : ''}`\n        }\n        onClick={handleNext}\n      >\n        &gt;\n      </button>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nconst App: React.FC = () => {\n  const images = [\n    './img/1.png',\n    './img/2.png',\n    './img/3.png',\n    './img/4.png',\n    './img/5.png',\n    './img/6.png',\n    './img/7.png',\n    './img/8.png',\n    './img/9.png',\n    './img/10.png',\n  ];\n\n  const [state, setState] = useState({\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  });\n\n  const setValue = (newState: Partial<State>) => {\n    setState((prevState) => ({\n      ...prevState,\n      ...newState,\n    }));\n  };\n\n  const MIN_FRAME_SIZE = 1;\n  const MAX_FRAME_SIZE = 10;\n  const MIN_STEP = 1;\n  const MAX_STEP = 10;\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n\n      <form className=\"App__form\">\n        <label htmlFor=\"itemWidth\" className=\"App__label\">\n          Item width\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            id=\"itemWidth\"\n            defaultValue={state.itemWidth}\n            onChange={event => setValue({ itemWidth: +event.target.value })}\n          />\n        </label>\n\n        <label htmlFor=\"frameSize\" className=\"App__label\">\n          Frame size\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            min={MIN_FRAME_SIZE}\n            max={MAX_FRAME_SIZE}\n            id=\"frameSize\"\n            defaultValue={state.frameSize}\n            onChange={event => setValue({ frameSize: +event.target.value })}\n          />\n        </label>\n\n        <label htmlFor=\"step\" className=\"App__label\">\n          Step\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            id=\"step\"\n            defaultValue={state.step}\n            min={MIN_STEP}\n            max={MAX_STEP}\n            onChange={event => setValue({ step: +event.target.value })}\n          />\n        </label>\n\n        <label htmlFor=\"animationDuration\" className=\"App__label\">\n          Animation duration\n          <input\n            className=\"App__input\"\n            type=\"number\"\n            id=\"animationDuration\"\n            defaultValue={state.animationDuration}\n            onChange={event => setValue({\n              animationDuration: +event.target.value,\n            })}\n          />\n        </label>\n\n        <label htmlFor=\"infinite\">\n          Infinite\n          <input\n            className=\"App__input App__input--checkbox\"\n            type=\"checkbox\"\n            id=\"infinite\"\n            checked={state.infinite}\n            onChange={event => setValue({ infinite: event.target.checked })}\n          />\n        </label>\n      </form>\n\n      <Carousel\n        images={images}\n        itemWidth={state.itemWidth}\n        frameSize={state.frameSize}\n        step={state.step}\n        animationDuration={state.animationDuration}\n        infinite={state.infinite}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}